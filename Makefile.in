# Copyright (c) 2000, Red Hat, Inc.
#
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 2 of the License, or
#     (at your option) any later version.
#
#     A copy of the GNU General Public License can be found at
#     http://www.gnu.org/
#
# Written by Christopher Faylor <cgf@redhat.com>
#
# Makefile for Cygwin installer

SHELL := @SHELL@

srcdir		:= @srcdir@
VPATH		:= @srcdir@
prefix		:= @prefix@
exec_prefix	:= @exec_prefix@

bindir		:= @bindir@
etcdir		:= $(exec_prefix)/etc

program_transform_name := @program_transform_name@

INSTALL		:= @INSTALL@
INSTALL_PROGRAM	:= @INSTALL_PROGRAM@
INSTALL_DATA	:= @INSTALL_DATA@

EXEEXT		:= @EXEEXT@
EXEEXT_FOR_BUILD := @EXEEXT_FOR_BUILD@

CC		:= @CC@
CC_FOR_TARGET	:= $(CC)
CXX		:= @CXX@

CFLAGS		:= @CFLAGS@ -Werror -Winline -Wall -Wpointer-arith -Wcast-align\
	-Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \
	-Wmissing-declarations -Wcomments
CXXFLAGS	:= @CXXFLAGS@ $(CFLAGS) -fno-exceptions -fno-rtti
CXX		:= @CXX@

WINDRES		:= @WINDRES@
OBJCOPY		:= @OBJCOPY@

include $(srcdir)/../Makefile.common

MINGW_INCLUDES	:= -I. -I$(srcdir) -I$(mingw_source)/include $(w32api_include) -I$(updir)/bz2lib

MINGW_CXXFLAGS	:= -MMD $(CXXFLAGS) -mno-cygwin $(MINGW_INCLUDES) -mwindows
MINGW_CFLAGS	:= -MMD $(CFLAGS) -mno-cygwin $(MINGW_INCLUDES) -mwindows
# to avoid false errors that assembly generates
WARNONLY_CFLAGS := -MMD @CFLAGS@ -Winline -Wall -Wpointer-arith -Wcast-align \
	-Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \
	-Wmissing-declarations -Wcomments \
	 -mno-cygwin $(MINGW_INCLUDES) -mwindows

ZLIB		:= zlib/libzcygw.a
BZ2LIB		:= $(bupdir)/bz2lib/libbz2.a
libmingw32.a	:= $(mingw_build)/libmingw32.a
libuser32	:= $(w32api_lib)/libuser32.a
libkernel32	:= $(w32api_lib)/libkernel32.a

ALL_DEP_LDLIBS	:= $(ZLIB) $(BZ2LIB) $(w32api_lib)/libole32.a $(w32api_lib)/libwsock32.a \
		$(w32api_lib)/libnetapi32.a $(w32api_lib)/libadvapi32.a \
		$(w32api_lib)/libuuid.a $(libkernel32) $(w32api_lib)/libuser32.a \
		$(libmingw32)

ALL_LDLIBS	:= ${patsubst $(mingw_build)/lib%.a,-l%,\
	      ${patsubst $(w32api_lib)/lib%.a,-l%,\
		${filter-out $(libmingw32),\
		  ${filter-out $(libuser32),\
		    ${filter-out $(libkernel32), $(ALL_DEP_LDLIBS)}}}}}

ALL_LDFLAGS	:= ${filter-out -I%, \
	       ${filter-out -W%, \
		-B$(w32api_lib)/ -B${mingw_build}/ $(MINGW_CFLAGS) $(LDFLAGS)}}

PROGS	:= setup$(EXEEXT)

OBJS = \
	archive.o \
	archive_tar.o \
	archive_tar_file.o \
	autoload.o \
	choose.o \
	compress.o \
	compress_bz.o \
	compress_gz.o \
	concat.o \
	cygpackage.o \
	desktop.o \
	dialog.o \
	diskfull.o \
	download.o \
	find.o \
	fromcwd.o \
	geturl.o \
	hash.o \
	ini.o \
	inilex.o \
	iniparse.o \
	install.o \
	io_stream.o \
	io_stream_cygfile.o \
	io_stream_file.o \
	io_stream_memory.o \
	localdir.o \
	log.o \
	main.o \
	mingw_getopt.o \
	mkdir.o \
	mklink2.o \
	mount.o \
	msg.o \
	net.o \
	netio.o \
	nio-ie5.o \
	nio-file.o \
	nio-ftp.o \
	nio-http.o \
	other.o \
	package_db.o \
	package_meta.o \
	postinstall.o \
	res.o \
	root.o \
	simpsock.o \
	site.o \
	source.o \
	splash.o \
	state.o \
	version.o \
	$E

.SUFFIXES:
.NOEXPORT:

.PHONY: all install clean realclean

all: Makefile $(PROGS)

setup$(EXEEXT): $(OBJS) $(ALL_DEP_LDLIBS)
ifdef VERBOSE
	$(CXX) $(MINGW_CXXFLAGS) -o $@ ${filter-out $(ALL_DEP_LIBS),$^}
else
	@echo $(CXX) ... -o $@ $(OBJS)
	@$(CXX) $(MINGW_CXXFLAGS) -o $@ ${filter-out $(ALL_DEP_LIBS),$^} $(ALL_LDFLAGS) $(ALL_LDLIBS)
endif
	@chmod a-x $@

mingw_getopt.o: $(cygwin_source)/lib/getopt.c
ifdef VERBOSE
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@D)/$(basename $@)$o $(MINGW_CFLAGS) $<
else
	@echo $(CC) $c -o $(@D)/$(basename $@)$o $(MINGW_CFLAGS) ... $^;\
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@D)/$(basename $@)$o $(MINGW_CFLAGS) $<
endif

clean:
	rm -f *.o $(PROGS) iniparse.c* iniparse.h* inilex.c* *.d
	$(MAKE) -C zlib clean

realclean: clean
	rm -f  Makefile config.cache

install: all
	$(SHELL) $(updir1)/mkinstalldirs $(bindir) $(etcdir)
	for i in $(PROGS) ; do \
	  n=`echo $$i | sed '$(program_transform_name)'`; \
	  $(INSTALL_PROGRAM) $$i $(bindir)/$$n; \
	done

$(libmingw32): $(mingw_build)/Makefile
	@$(MAKE) -C $(@D) $(@F)

$(ZLIB): zlib/Makefile
	$(MAKE) -C $(@D) $(@F) CC="$(CC)" CFLAGS='$(MINGW_CFLAGS)'

$(BZ2LIB): $(bupdir)/bz2lib/Makefile
	$(MAKE) -C $(@D) $(@F) CC="$(CC)" CFLAGS='$(MINGW_CFLAGS)'

version.c : $(srcdir)/ChangeLog Makefile
	V=`grep '^\$$Revision.*' $(srcdir)/ChangeLog \
	| sed -e 's/\$$Revision:* *//' \
	  -e 's/ *$$.*//'` ;\
	echo "const char *version = \"$$V\";" > version.tmp ;\
	mv version.tmp version.c

%.o: %.rc
ifdef VERBOSE
	$(WINDRES) --include-dir $(srcdir) --include-dir $(w32api_source)/include -o $@ $<
else
	@echo $(WINDRES) -o $@ $(<F)
	@$(WINDRES) --include-dir $(srcdir) --include-dir $(w32api_source)/include -o $@ $<
endif

%.o: %.c
ifdef VERBOSE
	$(CC) $(MINGW_CFLAGS) -c -o $@ $<
else
	@echo $(CC) -c $(CFLAGS) ... $(<F)
	@$(CC) $(MINGW_CFLAGS) -c -o $@ $<
endif

%.o: %.cc
ifdef VERBOSE
	$(CXX) $(MINGW_CXXFLAGS) -c -o $@ $<
else
	@echo $(CXX) -c $(CXXFLAGS) ... $(<F)
	@$(CXX) $(MINGW_CXXFLAGS) -c -o $@ $<
endif

autoload.o: autoload.c
ifdef VERBOSE
	$(CC) $(WARNONLY_CFLAGS) -c -o $@ $< -fno-inline-functions
else
	@echo $(CC) -c $(WARNONLY_CFLAGS) ... $(<F) -fno-inline-functions
	@$(CC) $(WARNONLY_CFLAGS) -c -o $@ $< -fno-inline-functions
endif

inilex.o: inilex.c
ifdef VERBOSE
	$(CC) $(WARNONLY_CFLAGS) -c -o $@ $<
else
	@echo $(CC) -c $(WARNONLY_CFLAGS) ... $(<F)
	@$(CC) $(WARNONLY_CFLAGS) -c -o $@ $< 
endif

iniparse.o: iniparse.cc
ifdef VERBOSE
	$(CXX) @CXXFLAGS@ $(WARNONLY_CFLAGS) -fno-exceptions -fno-rtti -c -o $@ $< 
else
	@echo $(CXX) -c @CXXFLAGS@ $(WARNONLY_CFLAGS) ... $(<F) -fno-exceptions -fno-rtti
	@$(CXX) @CXXFLAGS@ $(WARNONLY_CFLAGS) -c -o $@ $< -fno-exceptions -fno-rtti
endif



iniparse.cc iniparse.h : iniparse.y
	bison -d -o iniparse.cc $(srcdir)/iniparse.y
	@mv iniparse.cc.h iniparse.h

inilex.c : inilex.l iniparse.h
	flex -8 $(srcdir)/inilex.l
	mv lex.yy.c inilex.c

D:=$(wildcard *.d)
ifneq ($D,)
include $D
endif
