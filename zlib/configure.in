dnl Process this with autoconf to create configure

AC_INIT
AC_CONFIG_SRCDIR([zlib.h])
AC_PREREQ(2.53)
AC_CONFIG_AUX_DIR(../cfgaux)
AC_CANONICAL_TARGET([])
AM_INIT_AUTOMAKE(zlib, 1.1.3)

AM_MAINTAINER_MODE

dnl We use these options to decide which functions to include.
AC_ARG_WITH(target-subdir,
[  --with-target-subdir=SUBDIR
                          configuring in a subdirectory])
AC_ARG_WITH(cross-host,
[  --with-cross-host=HOST  configuring with a cross compiler])

AC_ARG_WITH(system-zlib,
[  --with-system-zlib      use installed libz])

dnl LIB_AC_PROG_CC

if test -z "$with_target_subdir" || test "$with_target_subdir" = "."; then
   COMPPATH=.
else
   COMPPATH=..
fi
AC_SUBST(COMPPATH)

if test -n "$with_cross_host"; then
   # We are being configured with a cross compiler.  AC_REPLACE_FUNCS
   # may not work correctly, because the compiler may not be able to
   # link executables.

   # We assume newlib.  This lets us hard-code the functions we know
   # we'll have.
   AC_DEFINE(HAVE_MEMCPY)
   AC_DEFINE(HAVE_STRERROR)

   # We ignore --with-system-zlib in this case.
   target_all=libzcygw.a
else
   AC_FUNC_MMAP
   AC_CHECK_FUNCS(memcpy strerror)

   if test "$with_system_zlib" = yes; then
      AC_CHECK_LIB(z, deflate, target_all=, target_all=libzcygw.a)
   else
      target_all=libzcygw.a
   fi
fi

AC_SUBST(target_all)

AC_CHECK_HEADERS(unistd.h)

AC_CHECK_TOOL(AR, ar, ar)
AC_SUBST(AR)
AC_CHECK_TOOL(AS, as, as)
AC_SUBST(AS)
AC_CHECK_TOOL(RANLIB, ranlib, ranlib)
AC_SUBST(RANLIB)
AC_CHECK_TOOL(LD, ld, ld)
AC_SUBST(LD)
AC_CHECK_TOOL(NM, nm, nm)
AC_SUBST(NM)
AC_CHECK_TOOL(DLLTOOL, dlltool, dlltool)
AC_SUBST(DLLTOOL)
AC_CHECK_TOOL(WINDRES, windres, windres)
AC_SUBST(WINDRES)

AM_CONDITIONAL(USE_LIBDIR, test -z "$with_cross_host")

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
